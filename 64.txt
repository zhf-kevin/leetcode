class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int rows = grid.size();
        int cols = grid[0].size();
        vector<vector<int>> cost;
        for(int i = 0; i < rows; i++)
        {
            vector<int> tmp;
            for(int j = 0; j < cols; j++)
                tmp.push_back(0);
            cost.push_back(tmp);
        }
        for(int i = rows - 1; i >= 0; i--)
        {
            for(int j = cols- 1; j >= 0; j--)
            {
                cost[i][j] = grid[i][j];
                if((i != rows - 1) || (j != cols- 1))
                {
                    int cost1 = INT_MAX;
                    int cost2 = INT_MAX;
                    if(i < rows - 1)
                    {
                        cost1 = cost[i + 1][j];
                    }
                    if(j < cols - 1)
                    {
                        cost2 = cost[i][j + 1];
                    }
                    cost[i][j] += cost1 < cost2 ? cost1 : cost2;
                }
            }
        }
        return cost[0][0];
    }
};